@page "/category/create"
@page "/category/update/{id:int}"
@using YumBlazor.Services.Extensions
@inject ICategoryRepository _categoryRepository 
@inject NavigationManager _navigationManager
@inject IJSRuntime _JS
@if (IsProcessing)
{
    <div class="position-absolute w-75 d-flex flex-column  align-items-center bg-white justify-content-center"> 
        <img src="lib/images/loading.gif" alt="Loading..." class="img-fluid" />
    </div>
}
else
{
    <div class="card shadow border-0 m-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">@(Id > 0 ?"Update" : "Create")</h2>
                </div>   
            </div>
        </div>
        <div class="card-body p-4">
            <EditForm Model="Category" FormName="CategoryUpsertForm" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator/>
                <div class="border p-3 mt-4">
                    <div class="form-floating py-3 col-12">
                        <InputText @bind-value="Category.Name" class="form-control" id="Name" placeholder="Name"/>
                        <label for="Name">Name</label>
                        <ValidationMessage For="@(()=> Category.Name)"/>
                    </div>
                    <div class="row mt-3">
                        <div class="col-6 col-md-3">
                            <button type="submit" class="btn  btn-primary form-control" disabled="@IsProcessing">
                                <i class="bi bi-floppy2-fill">Update</i>
                            </button>
                        </div>
                        <div class="col-6 col-md-3">
                                <a href="category" class="btn btn-secondary form-control" disabled="@IsProcessing">
                                    <i class="bi bi-arrow-bar-left">Back to List</i>
                                </a>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
}


@code {
    [Parameter] public int Id { get; set; }
    
    [SupplyParameterFromForm]
    private Category Category { get; set; } = new Category();
    
    private  bool IsProcessing { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firsRender)
    {
        if (firsRender)
        {
            await LoadCategory();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategory()
    {
        if (Id > 0)
        {
            Category = await _categoryRepository.GetAsync(Id);
        }
    }

    private async Task UpsertCategory()
    {
        IsProcessing = true;
        if (Category.Id == 0)
        { 
            await _categoryRepository.CreateAsync(Category);
            await _JS.ToastrSuccess("Category successfully created.");
        
        }
        else
        {
            await _categoryRepository.UpdateAsync(Category);
            await _JS.ToastrSuccess("Category successfully updated.");

        }

        IsProcessing = false;
        _navigationManager.NavigateTo("category");
    }
}
