@page "/order/list"
@inject IOrderRepository _orderRepository

@if (IsProcessing)
{
    <div class="position-absolute w-75 d-flex flex-column  align-items-center bg-white justify-content-center"> 
        <img src="lib/images/loading.gif" alt="Loading..." class="img-fluid" />
    </div>
}
else
{
    <div class="card shadow border-0 m-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Order List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                @if (OrderHeaders.Any())
                {
                    <table class="table table-bordered table-striped mt-4">
                        <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Phone Number</th>
                            <th>Email</th>
                            <th>Order Total</th>
                            <th>Order Date</th>
                            <th>Status</th>
                        </tr>
                        </thead>
                        <tbody>
                            @foreach (var obj in OrderHeaders)
                            {
                                <tr>
                                    <td>@obj.Id</td>
                                    <td>
                                        @obj.Name
                                    </td>
                                    <td>@obj.PhoneNumber</td>
                                    <td>@obj.Email</td>
                                    <td>@obj.OrderTotal.ToString("c")</td>
                                    <td>@obj.OrderDate</td>
                                    <td>@obj.Status</td>
                                    <td>
                                        <a href="@($"order/details/{obj.Id}")" class="btn btn-sm btn-primary"><i class="bi bi-pencil-fill">
                                            </i>Details
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;
    private IEnumerable<OrderHeader> OrderHeaders { get; set; } = new List<OrderHeader>();
   
    protected override async Task OnInitializedAsync()
    {
        // IsProcessing = true; in OnInitializedAsync Version
        // await LoadCategories();
        // IsProcessing = false;
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadOrderHeaders();
            IsProcessing = false;
            StateHasChanged();
        }
        // return base.OnAfterRenderAsync(firstRender);
    }

    private async Task LoadOrderHeaders()
    {
        OrderHeaders = await _orderRepository.GetAllAsync();
    }

}